{"id":"../node_modules/protein/index.js","dependencies":[{"name":"/home/berthold/Documents/becode_projects/frontend/react/pomodoro/package.json","includedInParent":true,"mtime":1589278438112},{"name":"/home/berthold/Documents/becode_projects/frontend/react/pomodoro/node_modules/protein/package.json","includedInParent":true,"mtime":1589278435312}],"generated":{"js":"var clone = function(from, to) {\n\tif (!from) return;\n\n\tto = to || {};\n\tObject.keys(from).forEach(function(key) {\n\t\tvar getter = from.__lookupGetter__(key);\n\t\tvar setter = from.__lookupSetter__(key);\n\n\t\tif (getter) return to.__defineGetter__(key, getter);\n\t\tif (setter) return to.__defineSetter__(key, setter);\n\n\t\tto[key] = from[key];\n\t});\n\treturn to;\n};\nvar injector = function() {\n\tvar hash = [];\n\tvar protos = [];\n\tvar empty;\n\tvar inject = function(obj) {\n\t\tif (empty === undefined) {\n\t\t\tempty = !Object.keys(inject.proto).length;\n\t\t}\n\t\tif (empty) return;\n\n\t\tvar i = hash.indexOf(obj.__proto__);\n\n\t\tif (i === -1) {\n\t\t\ti = protos.indexOf(obj.__proto__);\n\t\t}\n\t\tif (i === -1) {\n\t\t\tprotos[protos.push(clone(inject.proto))-1].__proto__ = obj.__proto__;\n\t\t\ti = hash.push(obj.__proto__)-1;\n\t\t}\n\t\tobj.__proto__ = protos[i];\n\t};\n\n\tinject.proto = {};\n\treturn inject;\n};\n\nmodule.exports = function() {\n\tvar onresponse = injector();\n\tvar onrequest = injector();\n\tvar mixin = function(request, response, next) {\n\t\trequest.response = response;\n\t\tonrequest(request);\n\t\tresponse.request = request;\n\t\tonresponse(response);\n\t\tif (!next) return;\n\t\tresponse.next = request.next = next;\n\t\tnext();\n\t};\n\n\tmixin.request = onrequest.proto;\n\tmixin.response = onresponse.proto;\n\tmixin.use = function(key, options, fn) {\n\t\tif (typeof options === 'function') return mixin.use(key, {}, options);\n\n\t\tkey = key.replace('res.', 'response.').replace('req.', 'request.').split('.');\n\t\tvar owner = key[0] === 'response' ? onresponse : onrequest;\n\t\tvar method = key[1];\n\n\t\tif (options.getter) {\n\t\t\towner.proto.__defineGetter__(method, fn);\n\t\t} else if (options.setter) {\n\t\t\towner.proto.__defineSetter__(method, fn);\n\t\t} else {\n\t\t\towner.proto[method] = fn;\n\t\t}\n\t\treturn mixin;\n\t};\n\treturn mixin;\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/protein/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/protein/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}}],"sources":{"../node_modules/protein/index.js":"var clone = function(from, to) {\n\tif (!from) return;\n\n\tto = to || {};\n\tObject.keys(from).forEach(function(key) {\n\t\tvar getter = from.__lookupGetter__(key);\n\t\tvar setter = from.__lookupSetter__(key);\n\n\t\tif (getter) return to.__defineGetter__(key, getter);\n\t\tif (setter) return to.__defineSetter__(key, setter);\n\n\t\tto[key] = from[key];\n\t});\n\treturn to;\n};\nvar injector = function() {\n\tvar hash = [];\n\tvar protos = [];\n\tvar empty;\n\tvar inject = function(obj) {\n\t\tif (empty === undefined) {\n\t\t\tempty = !Object.keys(inject.proto).length;\n\t\t}\n\t\tif (empty) return;\n\n\t\tvar i = hash.indexOf(obj.__proto__);\n\n\t\tif (i === -1) {\n\t\t\ti = protos.indexOf(obj.__proto__);\n\t\t}\n\t\tif (i === -1) {\n\t\t\tprotos[protos.push(clone(inject.proto))-1].__proto__ = obj.__proto__;\n\t\t\ti = hash.push(obj.__proto__)-1;\n\t\t}\n\t\tobj.__proto__ = protos[i];\n\t};\n\n\tinject.proto = {};\n\treturn inject;\n};\n\nmodule.exports = function() {\n\tvar onresponse = injector();\n\tvar onrequest = injector();\n\tvar mixin = function(request, response, next) {\n\t\trequest.response = response;\n\t\tonrequest(request);\n\t\tresponse.request = request;\n\t\tonresponse(response);\n\t\tif (!next) return;\n\t\tresponse.next = request.next = next;\n\t\tnext();\n\t};\n\n\tmixin.request = onrequest.proto;\n\tmixin.response = onresponse.proto;\n\tmixin.use = function(key, options, fn) {\n\t\tif (typeof options === 'function') return mixin.use(key, {}, options);\n\n\t\tkey = key.replace('res.', 'response.').replace('req.', 'request.').split('.');\n\t\tvar owner = key[0] === 'response' ? onresponse : onrequest;\n\t\tvar method = key[1];\n\n\t\tif (options.getter) {\n\t\t\towner.proto.__defineGetter__(method, fn);\n\t\t} else if (options.setter) {\n\t\t\towner.proto.__defineSetter__(method, fn);\n\t\t} else {\n\t\t\towner.proto[method] = fn;\n\t\t}\n\t\treturn mixin;\n\t};\n\treturn mixin;\n};"},"lineCount":74}},"error":null,"hash":"ef498de798f0727d467367d4971c545a","cacheData":{"env":{}}}